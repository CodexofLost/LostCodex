plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'kotlin-parcelize'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    namespace = "com.save.me"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.save.me"
        minSdk = 29
        targetSdk = 35
        versionCode = 12
        versionName = "1.2"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            def props = new Properties()
            def localPropsFile = rootProject.file("local.properties")
            if (localPropsFile.exists()) {
                localPropsFile.withInputStream { props.load(it) }
            }
            def getProp = { name ->
                return System.getenv(name) ?: props[name] ?: ''
            }
            storeFile file(getProp('RELEASE_STORE_FILE'))
            storePassword getProp('RELEASE_STORE_PASSWORD')
            keyAlias getProp('RELEASE_KEY_ALIAS')
            keyPassword getProp('RELEASE_KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xcontext-receivers"]
    }
    buildFeatures {
        buildConfig = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.15'
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}']
        }
    }
    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
}

ktlint {
    android = true
    ignoreFailures = false
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "json"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation 'androidx.fragment:fragment-ktx:1.7.1'
    implementation platform('androidx.compose:compose-bom:2024.05.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.animation:animation'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.05.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Room for persistent upload and command queue
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1")

    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // FCM dependencies
    implementation platform('com.google.firebase:firebase-bom:32.7.3')
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Play Services Location
    implementation 'com.google.android.gms:play-services-location:21.1.0'

    // Compose ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
}
apply plugin: 'com.google.gms.google-services'